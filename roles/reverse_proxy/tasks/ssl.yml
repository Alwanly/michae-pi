---
# --- copy key and cert
- name: Check if private key is provided
  ansible.builtin.stat:
    path: "{{ michae.components.reverse_proxy.ssl.key }}"
  register: nginx_ssl_key_provided

- name: Check if certificate is provided
  ansible.builtin.stat:
    path: "{{ michae.components.reverse_proxy.ssl.cert }}"
  register: nginx_ssl_cert_provided

- name: Copy the provided private key and certificate
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0600"
  loop:
    - src: "{{ michae.config_dir }}/nginx/ssl/michae.crt"
      dest: "{{ michae.config_dir }}/nginx/ssl/michae.crt"
    - src: "{{ michae.components.reverse_proxy.ssl_key }}"
      dest: "{{ michae.config_dir }}/nginx/ssl/michae.key"
  notify: Restart Nginx
  when: "nginx_ssl_key_provided.stat.exists and nginx_ssl_cert_provided.stat.exists"

# ---- create key and cert
- name: Check if private key is exists
  ansible.builtin.stat:
    path: "{{ michae.config_dir }}/nginx/ssl/michae.key"
  register: nginx_ssl_key_exists

- name: Check if certificate is provided
  ansible.builtin.stat:
    path: "{{ michae.config_dir }}/nginx/ssl/michae.crt"
  register: nginx_ssl_cert_exists

- name: Check whether the ssl is orphaned
  ansible.builtin.debug:
    msg: "SSL is orphaned, a new CA and certificate will be generated"
  when: "not nginx_ssl_key_exists.stat.exists or not nginx_ssl_cert_exists.stat.exists"

- name: Create private key and certificate
  ansible.builtin.import_tasks: ssl_create.yml
  when: "not nginx_ssl_key_exists.stat.exists or not nginx_ssl_cert_exists.stat.exists"
