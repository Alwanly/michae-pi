---
- name: Create config directory
  ansible.builtin.file:
    path: "{{ config_dir }}/shinobi"
    state: directory
    mode: "0775"
  register: shinobi_config_dir

- name: Ensure shinobi_mysql is defined
  ansible.builtin.fail:
    msg: "shinobi_mysql is not defined"
  when: shinobi_mysql is not defined

- name: Get MySQL IP address
  community.docker.docker_container_info:
    name: mysql
  register: shinobi_mysql_container_info
  when: shinobi_mysql

- name: Check if database exists
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ shinobi_mysql_db }}"
    state: present
  register: shinobi_db_exists

- name: Create database if it does not exist
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ shinobi_mysql_db }}"
    state: present
  when: not shinobi_db_exists.changed

- name: Check if user exists
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ shinobi_mysql_user }}"
    host: "%"
    state: present
  register: shinobi_user_exists

- name: Create user if it does not exist
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ shinobi_mysql_user }}"
    password: "{{ shinobi_mysql_password }}"
    host: "%"
    priv: "{{ shinobi_mysql_db }}.*:ALL"
    state: present
  when: not shinobi_user_exists.changed

- name: Copy Dockerfile and entrypoint script
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "templates/Dockerfile.j2", dest: "{{ config_dir }}/shinobi/Dockerfile" }
    - { src: "templates/entrypoint.sh.j2", dest: "{{ config_dir }}/shinobi/entrypoint.sh" }

- name: Build image from Dockerfile
  community.docker.docker_image:
    name: "{{ shinobi_image }}"
    build:
      path: "{{ config_dir }}/shinobi"
      dockerfile: Dockerfile
    source: build
  register: shinobi_image_info

- name: Start and connect container to network
  community.docker.docker_container:
    name: shinobi
    image: "{{ shinobi_image }}"
    recreate: true
    user: "{{ docker_user.uid }}:{{ docker_user.gid }}"
    restart_policy: unless-stopped
    published_ports:
      - "{{ shinobi_port }}:8080/tcp"
    env:
      DB_HOST: "{{ shinobi_mysql_container_info.container.NetworkSettings.Networks.mainnet.IPAddress | default('') }}"
      DB_USER: "{{ shinobi_mysql_user }}"
      DB_PASSWORD: "{{ shinobi_mysql_password }}"
      DB_DATABASE: "{{ shinobi_mysql_db }}"
    networks:
      - name: "{{ docker_network.name }}"
    volumes:
      - "{{ shinobi_config_dir }}/videos/:/home/Shinobi/videos/"
      - "{{ shinobi_config_dir }}/tools/:/home/Shinobi/tools/"
    labels:
      flame.type: "application"
      flame.name: "CCTV - Shinobi"
      flame.url: "http://{{ flame_hostname }}:{{ shinobi_port }}"
      flame.icon: "custom"
    state: "{{ 'started' if (shinobi_state == 'present') else 'absent' }}"

